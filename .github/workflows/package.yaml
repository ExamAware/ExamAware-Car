name: 打包并生成应用

on:
  pull_request:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Configure electron-builder binaries mirror
        run: echo "ELECTRON_BUILDER_BINARIES_MIRROR=https://mirrors.huaweicloud.com/electron-builder-binaries/" >> $GITHUB_ENV

      - name: Ensure required dependencies for Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libx11-xcb1 libxcomposite1 libxcursor1 libxdamage1 libxi6 libxtst6 libnss3 libxrandr2 libasound2 libpangocairo-1.0-0 libatk1.0-0 libcups2 libxss1 libgdk-pixbuf2.0-0 libgtk-3-0

      - name: Fix permissions for app-builder-bin
        if: matrix.os == 'ubuntu-latest'
        run: chmod +x ./node_modules/.pnpm/app-builder-bin@*/node_modules/app-builder-bin/linux/x64/app-builder

      - name: Debug app-builder-bin execution
        if: matrix.os == 'ubuntu-latest'
        run: |
          file ./node_modules/.pnpm/app-builder-bin@*/node_modules/app-builder-bin/linux/x64/app-builder
          ldd ./node_modules/.pnpm/app-builder-bin@*/node_modules/app-builder-bin/linux/x64/app-builder

      - name: Build and package for Windows
        if: matrix.os == 'windows-latest'
        run: pnpm run build:win

      - name: Build and package for macOS
        if: matrix.os == 'macos-latest'
        run: pnpm run build:mac

      - name: Build and package for Linux
        if: matrix.os == 'ubuntu-latest'
        uses: samuelmeuli/action-electron-builder@v1
        with:
          github_token: ${{ secrets.github_token }}

      - name: Upload artifact for Windows
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: ExamShowboardCar-Windows
          path: dist/*.exe

      - name: Upload artifact for macOS
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: ExamShowboardCar-macOS
          path: dist/*.dmg

      - name: Upload artifact for Linux
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: ExamShowboardCar-Linux
          path: dist/*.AppImage

      - name: Upload assets to GitHub Release
        if: github.event_name == 'release' && github.event.action == 'published'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.exe
            dist/*.dmg
            dist/*.AppImage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
